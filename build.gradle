plugins {
    id 'com.github.kt3k.coveralls' version '2.6.3'
    id 'com.jfrog.bintray' version '1.7.3'
}

apply plugin: 'checkstyle'
apply plugin: 'jacoco'
apply plugin: 'java-library'
apply plugin: 'maven'
apply plugin: 'maven-publish'

group = 'com.filestack'
sourceCompatibility = 1.7
version = file(new File('VERSION')).text.trim() // Get version string from VERSION text file

// ***************************************** Config ***********************************************

configurations {
    integTestCompile.extendsFrom testCompile
    integTestRuntime.extendsFrom testRuntime
    integTestImplementation.extendsFrom testImplementation
}

dependencies {
    testImplementation 'junit:junit:4.12' // Testing
    testImplementation 'org.mockito:mockito-core:2.8.47' // Mocking
    testImplementation 'com.squareup.retrofit2:retrofit-mock:2.3.0' // Helpers for Retrofit

    compile 'com.squareup.okhttp3:okhttp:3.8.0' // Low-level HTTP client
    compile 'com.squareup.retrofit2:retrofit:2.3.0' // High-level HTTP client
    compile 'com.squareup.retrofit2:converter-gson:2.3.0' // GSON integration

    compile 'com.google.code.gson:gson:2.8.1' // JSON serialization to Java objects
    compile 'commons-codec:commons-codec:1.11' // Using for Base64 implementation

    compile 'io.reactivex.rxjava2:rxjava:2.1.2' // Observable pattern for async methods
}

javadoc {
    destinationDir new File("./docs")
    options.optionFiles(new File('./config/javadoc/javadoc.txt'))
}

// Publications define artifacts to upload to Bintray
publishing {
    publications {
        Maven(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

repositories {
    jcenter()
}

sourceSets {
    integTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integTest/java')
        }
        resources.srcDir file('src/integTest/resources')
    }
}

// ***************************************** Tasks ************************************************

// Output version to version.properties file
task createProperties(dependsOn: processResources) {
    doLast {
        new File("$buildDir/resources/main/version.properties").withWriter { w ->
            Properties p = new Properties()
            p['version'] = project.version.toString()
            p.store w, null
        }
    }
}

// Run integration tests
task integTest(type: Test) {
    testClassesDir = sourceSets.integTest.output.classesDir
    classpath = sourceSets.integTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

// Create javadoc artifact jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// Create source artifact jar
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

classes.dependsOn createProperties // Create version.properties as part of build
integTest.mustRunAfter test // Run integration tests after unit tests
tasks.withType(Test) { // Put unit and integration test reports in separate directories
    reports.html.destination = file("${reporting.baseDir}/${name}")
}

// *************************************** Plugin Config ******************************************

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser')
            : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey')
            : System.getenv('BINTRAY_API_KEY')
    publications = ['Maven']
    publish = true
    pkg {
        repo = 'maven'
        userOrg = 'filestack'
        name = 'filestack-java'
        desc = 'Official Java SDK for Filestack.'

        publicDownloadNumbers = true
        licenses = ['Apache-2.0']

        websiteUrl = 'https://filestack.com'
        vcsUrl = 'https://github.com/filestack/filestack-java.git'
        issueTrackerUrl = 'https://github.com/filestack/filestack-java/issues'

        githubRepo = 'filestack/filestack-java'
        githubReleaseNotesFile = 'CHANGELOG.md'

        version {
            name = project.version
            vcsTag = project.version
            released = new Date()
        }
    }
}

checkstyle {
    toolVersion '8.1'
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}
